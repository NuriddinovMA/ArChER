contact_path = //fishminja/share/C-InterSecture/allContacts # the path to the folder contained the pairs id- the data of compared species
samples_pairs = FbHM FbHG LvHM LvHR LvHC # the sample list, the list of folder contained .allContacts files
contact_files = IMR90.equ.50kb.33N.1C.5Mb.balanced.allContacts MKEF.equ.50kb.33N.1C.5Mb.balanced.allContacts # the list of files to performing
contact_files = key:50 # only read files that name contained "50" 
contact_files = key:25 # only read files that name contained "25"
contact_files = all # read all files in folder 
contact_files = all # the number of string with "contact_files" id must correspond the number of sample pairs
path_to_juicer = C:/Desktop/juicebox/juicertools.jar # the path to Juicer Tools, the option is only to generate .hic-files  
chrom_path = //fishminja/share/ArChER/chrSizes # the path to the folder contained files with chromosome sizes
chrom_sizes = IMR90:hg38.chr.sizes LiverHum:hg38.chr.sizes MKEF:mm10.chr.sizes # the map of relation between samples id and chromosome size files
use_synblocks = True # only allContacts2metric.py; using synteny blocks (generated by net2mark.py) to calculate P-BAD metric; "True" or "False"; 
synblocks_path = //fishminja/share/ArChER/Remap # only allContacts2metric.py, the path to the folder contained synteny blocks files
synblocks_files = IMR90:hg38.mm10.net.2D.ann MKEF:mm10.hg38.net.2D.ann # the map of relation between samples id and synteny block files
synblocks_files = IMR90:hg38.galGal5.net.2D.ann # the number of string with 'synblocks_files' id must correspond the number of sample pairs
synblocks_files = LiverHum:hg38.mm10.net.2D.ann # 
synblocks_files = LiverHum:hg38.rheMac8.net.2D.ann #
synblocks_files = LiverHum:hg38.canFam3.net.2D.ann #
statistics = only # only allContacts2metric.py; if "True", the pipline gives P-BAD .bedGraph and plot of P-BAD distribution , if "False" does only .bedGraph, if "only" does only the plot; 
out_path = //fishminja/share/C-InterSecture # the path to output
# out_names = human # the name of outputs
frame = 8 # only allContacts2metric.py, size of frame within calculated P-BAD
use_loci = False # allContacts2metric.py and allContacts2plot.py, if True, the pipeline uses a list of loci to process.
loci = IMR90:chr1:0-250000 IMR90:chr2:1-2500000 MKEF:False # the map of relation between samples id and locus coordinates 
loci = IMR90:chr1:1000000-3000000 MKEF:chr6:1000000-3000000 # the number of string with 'loci' id must correspond the number of sample pairs
loci = IMR90:chr1:0-250000
loci = IMR90:chr1:0-250000 
loci = IMR90:chr1:0-250000
